services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    environment:
      - API_PORT=8000
    command:
      [
        "uv",
        "run",
        "uvicorn",
        "src.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
      ]
    ports:
      - "8000:8000"

  agent:
    build:
      context: .
      dockerfile: apps/agent-orchestrator/Dockerfile
    environment:
      - AGENT_PORT=8085
    ports:
      - "8085:8085"

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        NEXT_PUBLIC_API_BASE: http://api:8000
    environment:
      - NEXT_PUBLIC_API_BASE=http://api:8000
    ports:
      - "3000:3000"
    depends_on:
      - api
      - agent

  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    # The image CMD runs the CLI without a subcommand; append "start" here
    command: ["uv", "run", "python", "-m", "src.interfaces.cli.main", "start"]

  pocketbase:
    build:
      context: .
      dockerfile: infra/pocketbase/Dockerfile
    environment:
      PB_ADMIN_EMAIL: ${PB_ADMIN_EMAIL:?set}
      PB_ADMIN_PASSWORD: ${PB_ADMIN_PASSWORD:?set}
    command: >
      sh -c '
        if ! /pb/pocketbase --dir /pb/pb_data admin list | grep -q "@"; then
          echo "No admin found. Creating ${PB_ADMIN_EMAIL}...";
          /pb/pocketbase --dir /pb/pb_data admin create "${PB_ADMIN_EMAIL}" "${PB_ADMIN_PASSWORD}";
        fi;
        exec /pb/pocketbase --dir /pb/pb_data serve --http 0.0.0.0:8090
      '
    ports:
      - "8090:8090"
    volumes:
      - pb_data:/pb/pb_data
      - pb_public:/pb/pb_public
    restart: unless-stopped

volumes:
  pb_data:
  pb_public:
